/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULATOR_H_RPCGEN
#define _CALCULATOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct intWrapper {
	int a;
};
typedef struct intWrapper intWrapper;

struct intPair {
	int a;
	int b;
};
typedef struct intPair intPair;

struct intTripple {
	int a;
	int b;
	int c;
};
typedef struct intTripple intTripple;

typedef char *mystring;

struct intMinus {
	int a;
	int b;
};
typedef struct intMinus intMinus;

struct intDivision {
	int a;
	int b;
};
typedef struct intDivision intDivision;

#define ARITH_PROG 0x3141
#define ARITH_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define SQR 1
extern  int * sqr_1(intWrapper *, CLIENT *);
extern  int * sqr_1_svc(intWrapper *, struct svc_req *);
#define ADD 2
extern  int * add_1(intPair *, CLIENT *);
extern  int * add_1_svc(intPair *, struct svc_req *);
#define MUL 3
extern  int * mul_1(intTripple *, CLIENT *);
extern  int * mul_1_svc(intTripple *, struct svc_req *);
#define DISP 4
extern  mystring * disp_1(mystring *, CLIENT *);
extern  mystring * disp_1_svc(mystring *, struct svc_req *);
#define DIFF 5
extern  int * diff_1(intMinus *, CLIENT *);
extern  int * diff_1_svc(intMinus *, struct svc_req *);
#define DIV 6
extern  int * div_1(intDivision *, CLIENT *);
extern  int * div_1_svc(intDivision *, struct svc_req *);
extern int arith_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define SQR 1
extern  int * sqr_1();
extern  int * sqr_1_svc();
#define ADD 2
extern  int * add_1();
extern  int * add_1_svc();
#define MUL 3
extern  int * mul_1();
extern  int * mul_1_svc();
#define DISP 4
extern  mystring * disp_1();
extern  mystring * disp_1_svc();
#define DIFF 5
extern  int * diff_1();
extern  int * diff_1_svc();
#define DIV 6
extern  int * div_1();
extern  int * div_1_svc();
extern int arith_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_intWrapper (XDR *, intWrapper*);
extern  bool_t xdr_intPair (XDR *, intPair*);
extern  bool_t xdr_intTripple (XDR *, intTripple*);
extern  bool_t xdr_mystring (XDR *, mystring*);
extern  bool_t xdr_intMinus (XDR *, intMinus*);
extern  bool_t xdr_intDivision (XDR *, intDivision*);

#else /* K&R C */
extern bool_t xdr_intWrapper ();
extern bool_t xdr_intPair ();
extern bool_t xdr_intTripple ();
extern bool_t xdr_mystring ();
extern bool_t xdr_intMinus ();
extern bool_t xdr_intDivision ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALCULATOR_H_RPCGEN */
